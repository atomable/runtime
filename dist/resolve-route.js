'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.resolveRoute=undefined;var _liftjs=require('liftjs');var _result=require('./result');var routeMatchesEvent=function routeMatchesEvent(route,event){return route.path.toLowerCase()===event.path.toLowerCase()&&route.method.toLowerCase()===event.method.toLowerCase()};var extractRoute=function extractRoute(config,event){return(0,_liftjs.Maybe)(config.https).map(function(routes){return routes.find(function(route){return routeMatchesEvent(route,event)})}).get()};var resolveRoute=exports.resolveRoute=function resolveRoute(configs,event){var config=configs.filter(function(config){return(0,_liftjs.Maybe)(config.https).map(function(routes){return routes.some(function(route){return routeMatchesEvent(route,event)})}).or(false)});if(config.length===0){return{status:404,message:'not found'}}else if(config.length>1){return{status:500,message:'multiple routes matched'}}var matchedConfig=config[0];var matchedRoute=extractRoute(matchedConfig,event);return Object.assign({handler:matchedConfig.handler,basePath:matchedConfig.basePath},matchedRoute)};
//# sourceMappingURL=resolve-route.js.map