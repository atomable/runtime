{"version":3,"sources":["../src/resolve-module.js"],"names":["resolveModule","method","event","basePath","map","require","module","else","status","message","bind","params","err"],"mappings":"sGAAA,8BACA,gC,qKAEO,GAAMA,qCAAgB,QAAhBA,cAAgB,CAACC,MAAD,CAASC,KAAT,CAAgBC,QAAhB,CAA6B,CACxD,GAAI,CACF,MAAO,kBAAMF,MAAN,EACJG,GADI,CACA,uBAAUC,SAAQF,SAAWF,OAAOK,MAA1B,CAAV,CADA,EAEJC,IAFI,CAEC,mBAAO,CAAEC,OAAQ,GAAV,CAAeC,QAAS,kBAAxB,CAAP,CAFD,EAGJC,IAHI,CAGC,uBAAU,UAACC,MAAD,QAAYL,2CAAUK,MAAV,EAAZ,CAAV,CAHD,CAIR,CAAC,MAAOC,GAAP,CAAY,CACZ,MAAO,mBAAOX,OAAS,CAAEO,OAAQ,GAAV,CAAeC,QAAS,uBAAxB,CAAT,CAA6D,CAAED,OAAQ,GAAV,CAAeC,QAAS,WAAxB,CAApE,CACR,CACF,CATM","file":"resolve-module.js","sourcesContent":["import { Maybe } from 'liftjs';\r\nimport { Result } from './result';\r\n\r\nexport const resolveModule = (method, event, basePath) => {\r\n  try {\r\n    return Maybe(method)\r\n      .map(method => require(basePath + method.module))\r\n      .else(Result({ status: 404, message: 'module not found' }))\r\n      .bind(module => (params) => module(...params));\r\n  } catch (err) {\r\n    return Result(method ? { status: 500, message: 'unknown error occured' } : { status: 404, message: 'not found' });\r\n  }\r\n};"]}