{"version":3,"sources":["../src/resolve-module.js"],"names":["resolveModule","method","params","basePath","map","require","module","else","status","message","get","err"],"mappings":"sGAAA,8BACA,gCAEO,GAAMA,qCAAgB,QAAhBA,cAAgB,CAACC,MAAD,CAASC,MAAT,CAAiBC,QAAjB,CAA8B,CACzD,GAAI,CACF,MAAO,kBAAMF,MAAN,EACJG,GADI,CACA,uBAAUC,SAAQF,SAAWF,OAAOK,MAA1B,CAAV,CADA,EAEJC,IAFI,CAEC,mBAAO,CAAEC,OAAQ,GAAV,CAAeC,QAAS,kBAAxB,CAAP,CAFD,EAGJL,GAHI,CAGA,gBAAU,CAAE,MAAO,CAAEE,aAAF,CAAUJ,aAAV,CAAoB,CAHvC,EAIJQ,GAJI,EAKR,CAAC,MAAOC,GAAP,CAAY,CACZ,MAAOV,QAAS,CAAEO,OAAQ,GAAV,CAAeC,QAAS,uBAAxB,CAAT,CAA6D,CAAED,OAAQ,GAAV,CAAeC,QAAS,WAAxB,CACrE,CACF,CAVM","file":"resolve-module.js","sourcesContent":["import { Maybe } from 'liftjs';\r\nimport { Result } from './result';\r\n\r\nexport const resolveModule = (method, params, basePath) => {\r\n  try {\r\n    return Maybe(method)\r\n      .map(method => require(basePath + method.module))\r\n      .else(Result({ status: 404, message: 'module not found' }))\r\n      .map(module => { return { module, params } })\r\n      .get();\r\n  } catch (err) {\r\n    return method ? { status: 500, message: 'unknown error occured' } : { status: 404, message: 'not found' };\r\n  }\r\n};"]}